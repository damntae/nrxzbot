import telebot
import random

TOKEN = '6858509264:AAHbKVlWR-nrtwCGtkpTxCZ8yJC0abP-62c'
bot = telebot.TeleBot(TOKEN)

user_profiles = {}

keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
keyboard.row('üéØ –†—É–ª–µ—Ç–∫–∞', 'üé∞ –°–ª–æ—Ç—ã')
keyboard.row('‚õÑ –ü—Ä–æ—Ñ–∏–ª—å', 'üéÅ –ü–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –±–∞–±–ª–æ')


@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id
    if user_id not in user_profiles:
        user_profiles[user_id] = {'coins': 1000}
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä–æ–≤–æ–µ –∫–∞–∑–∏–Ω–æ.", reply_markup=keyboard)


@bot.message_handler(func=lambda message: message.text == 'üéØ –†—É–ª–µ—Ç–∫–∞')
def roulette(message):
    user_id = message.from_user.id
    if user_id not in user_profiles:
        bot.send_message(message.chat.id, "–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å.", reply_markup=keyboard)
        return

    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é —Å—Ç–∞–≤–∫—É:")
    bot.register_next_step_handler(message, process_roulette_bet)


def process_roulette_bet(message):
    try:
        bet = int(message.text)
        if bet <= 0 or bet > user_profiles[message.from_user.id]['coins']:
            raise ValueError()

        result = play_roulette()
        update_balance(message.from_user.id, result, bet)

        if result == 'win':
            bot.send_message(message.chat.id,
                             f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏! –í–∞—à –±–∞–ª–∞–Ω—Å: {user_profiles[message.from_user.id]['coins']} –º–æ–Ω–µ—Ç.",
                             reply_markup=keyboard)
        elif result == 'jackpot':
            bot.send_message(message.chat.id,
                             f"–î–∂–µ–∫–ø–æ—Ç! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {bet * 50} –º–æ–Ω–µ—Ç! –í–∞—à –±–∞–ª–∞–Ω—Å: {user_profiles[message.from_user.id]['coins']} –º–æ–Ω–µ—Ç.",
                             reply_markup=keyboard)
        else:
            bot.send_message(message.chat.id,
                             f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. –í–∞—à –±–∞–ª–∞–Ω—Å: {user_profiles[message.from_user.id]['coins']} –º–æ–Ω–µ—Ç.",
                             reply_markup=keyboard)
    except ValueError:
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Ç–∞–≤–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", reply_markup=keyboard)


def play_roulette():
    outcome = random.choices(['win', 'lose', 'jackpot'], weights=[0.35, 0.6, 0.05])[0]
    return outcome


@bot.message_handler(func=lambda message: message.text == 'üé∞ –°–ª–æ—Ç—ã')
def slots(message):
    user_id = message.from_user.id
    if user_id not in user_profiles:
        bot.send_message(message.chat.id, "–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å.", reply_markup=keyboard)
        return

    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é —Å—Ç–∞–≤–∫—É:")
    bot.register_next_step_handler(message, process_slots_bet)


def process_slots_bet(message):
    try:
        bet = int(message.text)
        if bet <= 0 or bet > user_profiles[message.from_user.id]['coins']:
            raise ValueError()

        result = play_slots(message)
        update_balance(message.from_user.id, result, bet)

        if result == 'win':
            bot.send_message(message.chat.id,
                             f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏! –í–∞—à –±–∞–ª–∞–Ω—Å: {user_profiles[message.from_user.id]['coins']} –º–æ–Ω–µ—Ç.",
                             reply_markup=keyboard)
        elif result == 'jackpot':
            bot.send_message(message.chat.id,
                             f"–î–∂–µ–∫–ø–æ—Ç! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {bet * 10} –º–æ–Ω–µ—Ç! –í–∞—à –±–∞–ª–∞–Ω—Å: {user_profiles[message.from_user.id]['coins']} –º–æ–Ω–µ—Ç.",
                             reply_markup=keyboard)
        else:
            bot.send_message(message.chat.id,
                             f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. –í–∞—à –±–∞–ª–∞–Ω—Å: {user_profiles[message.from_user.id]['coins']} –º–æ–Ω–µ—Ç.",
                             reply_markup=keyboard)
    except ValueError:
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Ç–∞–≤–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", reply_markup=keyboard)


def play_slots(message):  # –¢–µ–ø–µ—Ä—å –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä message
    symbols = ['üçí', 'üçã', 'üçá', '7']
    result = [random.choice(symbols) for _ in range(3)]
    bot.send_message(message.chat.id,f"{' '.join(result)}")

    if result.count('üçã') == 3:
        return 'win_x5'
    elif result.count('üçá') == 3:
        return 'win_x2'
    elif result.count('7') == 3:
        return 'jackpot'
    else:
        return 'lose'


def update_balance(user_id, result, bet):
    if result == 'win':
        user_profiles[user_id]['coins'] += bet * 2
    elif result == 'jackpot':
        user_profiles[user_id]['coins'] += bet * 100
    elif result == 'win_x5':
        user_profiles[user_id]['coins'] += bet * 5
    elif result == 'win_x2':
        user_profiles[user_id]['coins'] += bet * 2
    else:
        user_profiles[user_id]['coins'] -= bet

@bot.message_handler(func=lambda message: message.text == 'üéÅ –ü–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –±–∞–±–ª–æ')
def get_free_money(message):
    user_id = message.from_user.id
    if user_id not in user_profiles:
        user_profiles[user_id] = {'coins': 100}
    user_profiles[user_id]['coins'] += 500
    coins = user_profiles[user_id]['coins']
    bot.send_message(message.chat.id, f"–í—ã –ø–æ–ª—É—á–∏–ª–∏ 500 –º–æ–Ω–µ—Ç! –¢–µ–ø–µ—Ä—å —É –≤–∞—Å {coins} –º–æ–Ω–µ—Ç.", reply_markup=keyboard)

if __name__ == '__main__':
    bot.polling(none_stop=True)